plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
}
apply plugin: 'io.spring.dependency-management'
//apply from: 'buildApi.gradle'
apply from: 'mybatisGenerator.gradle'

group 'com.ch.cloud'
version '1.0.0-SNAPSHOT'


sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
//	springCloudVersion = 'Edgware.RELEASE' //Greenwich.RC1\Finchley.SR2\Edgware.SR5\Camden.SR3
    springCloudVersion = 'Greenwich.RELEASE'
    springOauth2 = '2.3.4.RELEASE'
    alicloudVersion = '+' //0.2.1.RELEASE,0.9.0.RELEASE
    chVersion = '2.0.0-SNAPSHOT' //0.2.1.RELEASE
    rocketmqVersion = '4.0.0-incubating' //0.2.1.RELEASE
    kafkaVersion = '1.1.0' //0.8.2.0
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven {
        allowInsecureProtocol = true
        url 'http://192.168.0.253:8081/repository/maven-public/'
    }
    maven { url "https://maven.aliyun.com/repository/central" }
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    //私有相关包
    implementation("com.ch:ch-core:${chVersion}")
//    implementation("com.ch:ch-helper:${chVersion}")
    implementation("com.ch:ch-mybatis:${chVersion}")
//    implementation(fileTree("${rootDir}/other/libs"))

    //spring boot相关包
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web', {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
//    implementation 'org.springframework.boot:spring-boot-starter-redis'

    //数据源相关包
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'mysql:mysql-connector-java:8.0.28'

//    implementation 'org.apache.rocketmq:rocketmq-spring-boot-starter:2.1.0'
    implementation "org.apache.rocketmq:rocketmq-tools:${rocketmqVersion}"
    implementation "org.apache.rocketmq:rocketmq-namesrv:${rocketmqVersion}"
    implementation "org.apache.rocketmq:rocketmq-broker:${rocketmqVersion}"
    implementation 'org.jooq:joor:0.9.14'

    implementation 'io.dubbo.springboot:spring-boot-starter-dubbo:1.0.0'

//     https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
//    implementation "org.apache.kafka:kafka-clients:${kafkaVersion}", {
//        exclude group: 'log4j', module: 'log4j'
//        exclude group: 'org.slf4j'
//    }
//    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka
    implementation group: 'org.apache.kafka', name: 'kafka_2.11', version: "${kafkaVersion}", {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j'
    }
    implementation "org.springframework.kafka:spring-kafka:2.2.10.RELEASE"

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
//    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
//    implementation('org.springframework.kafka:spring-kafka:2+')
    implementation 'redis.clients:jedis:3.1.0'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation 'org.gavaghan:geodesy:1.1.3'
    //log4j to slf4j
    implementation 'org.slf4j:log4j-over-slf4j:1.7.36'
    /* dubbo service jar end*/
    // https://mvnrepository.com/artifact/io.protostuff/protostuff-core
    implementation group: 'io.protostuff', name: 'protostuff-core', version: '1.6.0'
    // https://mvnrepository.com/artifact/io.protostuff/protostuff-runtime
    implementation group: 'io.protostuff', name: 'protostuff-runtime', version: '1.6.0'
    //win系统会导致Controller与Service层实例不一致
//    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.projectlombok:lombok'

//    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation "org.springframework.cloud:spring-cloud-starter-alibaba-nacos-config:${alicloudVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-alibaba-nacos-discovery:${alicloudVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-alibaba-sentinel:${alicloudVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
