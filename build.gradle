plugins {
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'
//apply from: 'buildApi.gradle'
//apply from: 'mybatisGenerator.gradle'


group 'com.ch'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"


repositories {
    mavenLocal()
//    maven { url "http://nexus.sf-express.com/nexus/content/groups/public/" }
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
ext {
//	springCloudVersion = 'Edgware.RELEASE' //Greenwich.RC1\Finchley.SR2\Edgware.SR5\Camden.SR3
    springCloudVersion = 'Greenwich.RELEASE'
    springOauth2 = '2.3.4.RELEASE'
    alicloudVersion = '0.9.0.RELEASE' //0.2.1.RELEASE
    chVersion = '1.0.3-SNAPSHOT' //0.2.1.RELEASE
}

dependencies {

    //私有相关包
    compile("com.ch:ch-core:${chVersion}")

//    compile("com.ch:ch-helper:${chVersion}")
    compile("com.ch:ch-mybatis:${chVersion}")

    //spring boot相关包
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web', {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    testCompile 'org.springframework.boot:spring-boot-starter-test'

//    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-jetty'
//    compile 'org.springframework.boot:spring-boot-starter-redis'

    //数据源相关包
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1'
    compile "mysql:mysql-connector-java:5.1.30"


    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0', {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j'
    }

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka

    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.0.0', {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j'
    }

    // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
    compile('org.springframework.kafka:spring-kafka:1.0.0.RELEASE')
//    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.1.10.RELEASE'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
//    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.0.0'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-tools
//    compile group: 'org.apache.kafka', name: 'kafka-tools', version: '1.1.0'
//    compile group: 'org.apache.kafka', name: 'kafka-tools', version: '1.0.2'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
