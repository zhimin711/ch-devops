buildscript {
    ext {
        springBootVersion = '1.4.3.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
//        maven { url 'http://127.0.0.1:8081/repository/maven-public/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}
group 'com.ch'
version '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply from: 'buildApi.gradle'
apply from: 'mybatisGenerator.gradle'

springBoot {
    mainClass = "com.ch.log.LogApplication"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

ext {
    springBootVersion = '1.4.3.RELEASE'
    chVersion = '1.0.1-SNAPSHOT'
}
repositories {
    mavenLocal()
    mavenCentral()
//    maven { url 'http://nexus.sf-express.com/nexus/content/groups/public/' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
//    compile fileTree(dir: "$projectDir/libs", include: ['*.jar'])

    //私有相关包
    compile("com.ch:ch-core:${chVersion}")

//    compile("com.ch:ch-helper:${chVersion}")
    compile("com.ch:ch-jdbc-mybatis:${chVersion}")
    compile("com.ch:ch-shiro:${chVersion}")

    //spring boot相关包
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web', {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    testCompile 'org.springframework.boot:spring-boot-starter-test'

//    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-redis'

    //数据源相关包
    compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1'
    compile "mysql:mysql-connector-java:5.1.30"


//     https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    compile 'org.apache.kafka:kafka-clients:0.8.2.0', {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j'
    }
//    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka
    compile group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.8.2.0', {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j'
    }
//    compile group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.0.0'

    // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
    compile('org.springframework.kafka:spring-kafka:1.0.0.RELEASE')
//    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.1.10.RELEASE'

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
//    compile group: 'org.apache.kafka', name: 'kafka-streams', version: '2.0.0'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-tools
//    compile group: 'org.apache.kafka', name: 'kafka-tools', version: '1.1.0'
//    compile group: 'org.apache.kafka', name: 'kafka-tools', version: '1.0.2'

    /* dubbo微服务依赖包 dubbo service jar start*/
    compile('com.alibaba:dubbo:2.5.3') {
        exclude group: 'org.springframework', module: 'spring'
    }
    compile('com.github.sgroschupf:zkclient:0.1') {
        exclude group: 'log4j', module: 'log4j'
        exclude group: 'org.slf4j'
    }
    /* dubbo service jar end*/

//    compile group: 'com.ch', name: 'ch-logback-flume', version: '1.0.1-SNAPSHOT'
}
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR3'
    }
}
